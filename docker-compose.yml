version:                   '3.1'

services:
 node-mysql:
   container_name:         react-express-mysql
   image:                  mysql:latest
   command:                --default-authentication-plugin=mysql_native_password
   restart:                unless-stopped
   ports:
     - 3389:3306
   expose:
     - 3306
   environment:
     MYSQL_HOST:           localhost
     MYSQL_ROOT_PASSWORD:  ${DB_PASSWORD}
     MYSQL_DATABASE:       ${DB_DATABASE}
     MYSQL_USER:           ${DB_USERNAME}
     MYSQL_PASSWORD:       ${DB_PASSWORD}
   networks:
     - app-network
   volumes:
     - ${MYSQL_HOST_VOLUME:-./docker_volumes/var/lib/mysql}:/var/lib/mysql
   env_file:
     - ./api/.env
   cap_add:
     - SYS_NICE  # CAP_SYS_NICE


 web-app:
    container_name:        react-express-web-app
    build:
        context:           ./client
    ports:
      - 80:3000
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./client:/app
      - /app/node_modules
    command:               "npm start"
    stdin_open:            true
    networks:
      - app-network

 api-app:
    depends_on:
     - node-mysql
    container_name:        react-express-web-api
    build:
        context:           ./api
    ports:
      - 9000:9000
    expose:
      - 9000
    environment:
      - NODE_ENV=development
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
    volumes:
      - ./api:/app
      - /app/node_modules
    networks:
      - app-network

 phpmyadmin:
    image:                 phpmyadmin
    container_name:        phpmyadmin
    environment:
      PMA_ARBITRARY:       1
      PMA_HOST:            react-express-mysql
      PMA_USER:            ${DB_USERNAME}
      PMA_PASSWORD:        ${DB_PASSWORD}
    restart:               unless-stopped
    ports:
     - 8080:80
    volumes:
      - /sessions
    networks:
      - app-network
    env_file:
      - ./api/.env

networks:
  app-network:
    driver:                bridge